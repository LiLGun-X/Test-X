#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "   \033[1;32mTESTANDO A VELOCIDADE DO SERVIDOR !\033[0m"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCIA):\033[1;37m$png"
echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;32mLINK: \033[1;36m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O LIMITER... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  LIMITER ATIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mPARANDO O LIMITER... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LIMITER PARADO !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}
#onlineapp
function onapp1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O ONLINE APP... \033[0m"
   echo ""
   apt install apache2 -y > /dev/null 2>&1
   sed -i "s/Listen 80/Listen 82/g" /etc/apache2/ports.conf >/dev/null 2>&1
   service apache2 restart
   rm -rf /var/www/html/server >/dev/null 2>&1
   mkdir /var/www/html/server >/dev/null 2>&1
   fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
   [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   } || {
       sed -i '/onlineapp/d' /etc/autostart
	   echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   }
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;32m  ONLINE APP ATIVO !\033[0m"
   echo -e "\033[1;31m \033[1;33mURL de Usuários Online para usar no App\033[0m"
   echo -e " http://$IP:82/server/online"
   sleep 10
   menu
}
function onapp2 () {
   clear
   echo -e "\033[1;32mPARANDO O ONLINE APP... \033[0m"
   echo ""
   fun_stponlineapp () {
      sleep 1
      screen -r -S "onlineapp" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
          sed -i '/onlineapp/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stponlineapp' 'sleep 3'
   rm -rf /var/www/html/server >/dev/null 2>&1
   echo -e "\n\033[1;31m ONLINE APP PARADO !\033[0m"
   sleep 3
   menu
}
function onapp_ssh () {
[[ $(ps x | grep "onlineapp"|grep -v grep |wc -l) = '0' ]] && onapp1 || onapp2
}
##nginx
function startnginx () {
   clear
   echo -e "\n\033[1;32mINSTALL WEBSITE... \033[0m"
   echo ""
   fun_installnginx () {
    apt install nginx -y >/dev/null 2>&1
	cat > /etc/nginx/nginx.conf <<END
user www-data;
worker_processes 2;
pid /var/run/nginx.pid;
events {
 multi_accept on;
        worker_connections 1024;
}
http {
 autoindex on;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        client_max_body_size 32M;
 client_header_buffer_size 8m;
 large_client_header_buffers 8 8m;
 fastcgi_buffer_size 8m;
 fastcgi_buffers 8 8m;
 fastcgi_read_timeout 600;
        include /etc/nginx/conf.d/*.conf;
}
END
 mkdir -p /home/website
 echo "<?php

phpinfo();

?>
" > /home/website/index.php
 args='$args'
 uri='$uri'
 document_root='$document_root'
 fastcgi_script_name='$fastcgi_script_name'
 cat > /etc/nginx/conf.d/vps.conf <<END
server {
    listen 80;
    server_name  127.0.0.1 localhost;
    access_log /var/log/nginx/vps-access.log;
    error_log /var/log/nginx/vps-error.log error;
    root   /home/website;
    location / {
        index  index.html index.htm index.php;
 try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
END
	apt install ca-certificates apt-transport-https software-properties-common -y >/dev/null 2>&1
	add-apt-repository ppa:ondrej/php -y >/dev/null 2>&1
	apt-get install php7.4 php7.4-cli php7.4-cgi php7.4-fpm php7.4-gd php7.4-mysql php7.4-imap php7.4-curl php7.4-intl php7.4-pspell php7.4-sqlite3 php7.4-tidy php7.4-xmlrpc php7.4-xsl php7.4-zip php7.4-mbstring php7.4-soap php7.4-opcache php7.4-common php7.4-json php7.4-readline php7.4-xml -y >/dev/null 2>&1
}
   fun_restartnginx () {
   /etc/init.d/nginx restart >/dev/null 2>&1
   /etc/init.d/nginx start >/dev/null 2>&1
   /etc/init.d/php7.4-fpm restart >/dev/null 2>&1
   /etc/init.d/php7.4-fpm start >/dev/null 2>&1
   }
   [[ ! -d /home/website ]] && fun_installnginx
   fun_bar 'fun_restartnginx' 'sleep 3'
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;32m  WEBSITE INSTALL SUCCESS !\033[0m"
   echo -e "\033[1;31m \033[1;33mURL CHECK WEBSITE\033[0m"
   echo -e " http://$IP"
   sleep 10
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   menu2
}
function stopnginx () {
   clear
   echo -e "\033[1;32mSTOP WEBSITE... \033[0m"
   echo ""
   fun_stopnginx () {
      sleep 1
      /etc/init.d/nginx stop
      /etc/init.d/php5.6-fpm stop
      sleep 1
   }
   fun_bar 'fun_stopnginx'
   echo -e "\n\033[1;31m WEBSITE STOP SUCCESS !\033[0m"
   sleep 1
   menu2
}
function nginxinstall () {
[[ $(ps x | grep "nginx"|grep -v grep |wc -l) = '0' ]] && startnginx || stopnginx
}
#
function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDESATIVANDO AUTO EXECUÇÃO\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mATIVANDO AUTO EXECUÇÃO\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m◉ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
webnginx=$(ps x | grep "nginx"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m       ⇱ KGUZA SCRIPT FREE EDIT:BY LOLY ⇲       \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mSYSTEM             MEMORY RAM        CPU "
echo -e "\033[1;31mOS: \033[1;37m$_system \033[1;31mทั้งหมด:\033[1;37m$_ram  \033[1;31mCORE: \033[1;37m$_core\033[0m"
echo -e "\033[1;31mเวลา: \033[1;37m$_hora     \033[1;31mการใช้งาน: \033[1;37m$_usor\033[1;31mการใช้งาน: \033[1;37m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;32mออนไลน์:\033[1;37m $_onlin      \033[1;31mหมดอายุ: \033[1;37m$_userexp     \033[1;33mทั้งหมด: \033[1;37m$_tuser\033[0m"
    var01='\033[1;37m•'
} || {
    echo -e "  \033[1;33m[\033[1;31m!\033[1;33m]  \033[1;32mEXISTE UMA ATUALIZACAO DISPONIVEL  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
    var01="\033[1;32m!"
}
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\033[1;31m[\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mเพิ่มโฮสต์ \033[1;31m               [\033[1;36m33\033[1;31m] \033[1;37m• \033[1;33mเปิดผู้ใช้รูท \033[1;31m
[\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mลบโฮสต์ \033[1;31m                [\033[1;36m34\033[1;31m] \033[1;37m• \033[1;33mตั้งตวามเร็วอินเทอร์เน็ต \033[1;31m
[\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mรีบูตเซิร์ฟเวอร์ใหม่ \033[1;31m        [\033[1;36m35\033[1;31m] \033[1;37m• \033[1;33mตั้งเวลารีบูตระบบ \033[1;31m
[\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mรีบูตระบบใหม่ \033[1;31m            [\033[1;36m36\033[1;31m] \033[1;37m• \033[1;33mWEBSITE $webnginx \033[1;31m
[\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf\033[1;31m       
[\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot\033[1;31m        
[\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mBOT TESTE $stsbotteste\033[1;31m
[\033[1;36m28\033[1;31m] \033[1;37m• \033[1;33mเปลี่ยนรหัสผ่านรูท \033[1;31m
[\033[1;36m29\033[1;31m] \033[1;37m• \033[1;33mเปิดเมนู อัตโนมัติ $autm \033[1;31m
[\033[1;36m30\033[1;31m] $var01 \033[1;33mอัพเดตสคริบต์ \033[1;31m
[\033[1;36m31\033[1;31m] \033[1;37m• \033[1;33mถอนการติดตั้งสคริปต์ \033[1;31m
[\033[1;36m32\033[1;31m] \033[1;37m• \033[1;33mย้อนกลับ \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m
[\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mออก \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;32mCHOOSE OPTION \033[1;33m?\033[1;31m?\033[1;37m : "; read x
case "$x" in
   21)
   clear
   addhost
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   22)
   clear
   delhost
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   menu2
   ;;
   23)
   clear
   reiniciarsistema
   ;;
   24)
   clear
   reiniciarservicos
   sleep 3
   ;;
   25)
   blockt
   ;;
   26)
   botssh
   ;;
   27)
   botteste.sh
   ;;
   28)
   clear
   senharoot
   sleep 3
   ;;
   29)
   autoexec
   ;;
   30)
   attscript
   ;;
   31)
   clear
   delscript
   ;;
   32)
   menu
     ;;
   33)
   clear
   changeroot
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   34)
   clear
   s
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   35)
   clear
   timereboot
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   36)
   clear
   nginxinstall
   ;;
   0|00)
   echo -e "\033[1;31mออก...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mตัวเลือกไม่ถูกต้อง !\033[0m"
   sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m       ⇱ KGUZA SCRIPT FREE EDIT:BY LOLY ⇲       \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mSYSTEM             MEMORY RAM        CPU "
echo -e "\033[1;31mOS: \033[1;37m$_system \033[1;31mทั้งหมด:\033[1;37m$_ram  \033[1;31mCORE: \033[1;37m$_core\033[0m"
echo -e "\033[1;31mเวลา: \033[1;37m$_hora     \033[1;31mการใช้งาน: \033[1;37m$_usor\033[1;31mการใช้งาน: \033[1;37m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mออนไลน์:\033[1;37m $_onlin      \033[1;31mหมดอายุ: \033[1;37m$_userexp     \033[1;33mทั้งหมด: \033[1;37m$_tuser\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mสร้างบัญชี ผู้ใช้ \033[1;31m            [\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mSPEED TEST \033[1;31m
[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mสร้างบัญชี ผุ้ใช้ทดลอง \033[1;31m       [\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mBANNER \033[1;31m
[\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;33mลบชื่อ ผู้ใช้ \033[1;31m               [\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mกราฟเเสดงความเร็วเน็ต \033[1;31m
[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mเช็คผู้ใช้ ออนไลน์ \033[1;31m          [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mเพิ่มประสิทธิภาพ \033[1;31m
[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mเปลี่ยนวันหมดอายุ ผู้ใช้ \033[1;31m      [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mBACKUP \033[1;31m
[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mเปลี่ยนจำกัด การเชื่อมต่อ \033[1;31m    [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33mVIRTUAL MEMORY\033[1;31m
[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mเปลี่ยนรหัสผ่าน ผู้ใช้ \033[1;31m        [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mจำกัดการเชื่อมต่อ $stsl\033[1;31m
[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mลบผู้ใช้ที่ หมดอายุ \033[1;31m          [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mBAD VPN $stsu\033[1;31m
[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mเช็คบัญชีทั้งหมด \033[1;31m            [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;33mONLINE APP $stson\033[1;31m
[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mโหมดฟังชั่น \033[1;31m               [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mข้อมูล VPS \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m
[\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mออก \033[1;31m                    [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mหน้าถัดไป \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;32mCHOOSE OPTION \033[1;33m?\033[1;31m?\033[1;37m : "; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   velocity
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   12)
   clear
   banner
   sleep 3
   ;;
   13)
   clear
   echo -e "\033[1;32mPARA SAIR CLICK CTRL + C\033[1;36m"
   sleep 4
   nload
   ;;
   14)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   15)
   userbackup
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   16)
   swapmemory
   ;;
   17)
   limit_ssh
   ;;
   18)
   clear
   badvpn
   exit;
   ;;
   19)
   onapp_ssh
   ;;
   20)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;33mกลับสู่เมนูหลัก !\033[1;32mMENU!\033[0m"; read
   ;;
   21)
   menu2
   ;;
   0 | 00)
   echo -e "\033[1;31mออก...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mตัวเลือกไม่ถูกต้อง !\033[0m"
   sleep 2
esac
done
}
menu
#fim
